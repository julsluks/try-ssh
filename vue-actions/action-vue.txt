name: Preparant per producci√≥
run-name: ${{ github.actor }} est√† pujant l'aplicaci√≥ a PROD  üöÄ
on: [push]
jobs:
  Pujar-a-produccio-amb-SCP:
    runs-on: ubuntu-latest
    steps:
      - name: Obtenint el codi del respositori
        uses: actions/checkout@v4

      - name: Crear Dist Vue
        run: |
          cd ${{ github.workspace }}/vue-actions/
          npm install
          npm run build

      - name: scp a produccio
        run: |
          echo "${{ secrets.KEY_SECRET }}" > ~/prod_key.pem
          chmod 600 ~/prod_key.pem
          cd ${{ github.workspace }}/vue-actions/
          scp -r -o stricthostkeychecking=no -o UserKnownHostsFile=/dev/null -i "~/prod_key.pem" ./dist/* ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/home/a22betvilver/web/try-ssh.a22betvilver.daw.inspedralbes.cat/public_html/

      - run: echo "üçè This job's status is ${{ job.status }}."




# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# ESLint is a tool for identifying and reporting on patterns
# found in ECMAScript/JavaScript code.
# More details at https://github.com/eslint/eslint
# and https://eslint.org

name: ESLint

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '40 11 * * 2'

jobs:
  eslint:
    name: Run eslint scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install ESLint
        run: |
          npm install eslint@8.10.0
          npm install @microsoft/eslint-formatter-sarif@2.1.7

      - name: Run ESLint
        run: npx eslint .
          --config .eslintrc.js
          --ext .js,.jsx,.ts,.tsx
          --format @microsoft/eslint-formatter-sarif
          --output-file eslint-results.sarif
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true